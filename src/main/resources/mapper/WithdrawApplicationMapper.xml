<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.siruiman.crosslogistics.mapper.WithdrawApplicationMapper">
    <resultMap id="BaseResultMap" type="com.siruiman.crosslogistics.model.WithdrawApplication">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="withdraw_id" property="withdrawId" jdbcType="INTEGER"/>
        <result column="withdraw_money" property="withdrawMoney" jdbcType="DECIMAL"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="withdraw_role" property="withdrawRole" jdbcType="VARCHAR"/>
        <result column="withdraw_type" property="withdrawType" jdbcType="TINYINT"/>
        <result column="withdraw_order_number" property="withdrawOrderNumber" jdbcType="VARCHAR"/>
        <result column="add_time" property="addTime" jdbcType="TIMESTAMP"/>
        <result column="arrive_time" property="arriveTime" jdbcType="TIMESTAMP"/>
        <result column="comment" property="comment" jdbcType="VARCHAR"/>
        <result column="user_true_name" property="userTrueName" jdbcType="VARCHAR"/>
        <result column="withdraw_way" property="withdrawWay" jdbcType="VARCHAR"/>
        <result column="bank_card_id" property="bankCardId" jdbcType="INTEGER"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="bank_name" property="bankName" jdbcType="VARCHAR"/>
        <result column="card_number" property="cardNumber" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="number" property="number" jdbcType="VARCHAR"/>
        <result column="admin_uid" property="adminUid" jdbcType="INTEGER"/>
        <result column="unit" property="unit" jdbcType="INTEGER"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from withdraw_application
    where withdraw_id = #{withdrawId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.siruiman.crosslogistics.model.WithdrawApplication">
        <selectKey resultType="java.lang.Integer" keyProperty="withdrawId" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into withdraw_application (withdraw_money, user_id,
        withdraw_role, withdraw_type, withdraw_order_number,
        add_time, arrive_time, `comment`,withdraw_way,bank_card_id,account,unit
        )
        values (#{withdrawMoney,jdbcType=DECIMAL}, #{userId,jdbcType=INTEGER},
        #{withdrawRole,jdbcType=TINYINT}, #{withdrawType,jdbcType=TINYINT}, #{withdrawOrderNumber,jdbcType=VARCHAR},
        #{addTime,jdbcType=TIMESTAMP}, #{arriveTime,jdbcType=TIMESTAMP},
        #{comment,jdbcType=VARCHAR},#{withdrawWay,jdbcType=VARCHAR},
        #{bankCardId,jdbcType=INTEGER},#{account,jdbcType=VARCHAR},#{unit,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.siruiman.crosslogistics.model.WithdrawApplication">
    update withdraw_application
    set withdraw_money = #{withdrawMoney,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=INTEGER},
      withdraw_role = #{withdrawRole,jdbcType=TINYINT},
      withdraw_type = #{withdrawType,jdbcType=TINYINT},
      withdraw_order_number = #{withdrawOrderNumber,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      arrive_time = #{arriveTime,jdbcType=TIMESTAMP},
      `comment` = #{comment,jdbcType=VARCHAR},
    admin_uid = #{adminUid,jdbcType=INTEGER}
    where withdraw_id = #{withdrawId,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select wa.withdraw_id,wa.withdraw_money, wa.user_id, wa.withdraw_role, wa.withdraw_type,
        wa.withdraw_order_number, wa.add_time, wa.arrive_time,
        wa.`comment`,wa.bank_card_id,wa.account,wa.withdraw_way,auc.user_true_name
        from withdraw_application AS wa
        LEFT JOIN app_user_certification AS auc ON (wa.user_id = auc.app_user_id)
        where withdraw_id = #{withdrawId,jdbcType=INTEGER} AND auc.user_type = wa.withdraw_role AND
        user_certification_status = '已通过'
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select withdraw_id,withdraw_money, user_id, withdraw_role, withdraw_type,
        withdraw_order_number, add_time, arrive_time, `comment`
        from withdraw_application
    </select>
    <select id="selectWithdrawApplicationList" resultMap="BaseResultMap" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SELECT wa.withdraw_id,wa.withdraw_money, wa.user_id, wa.withdraw_role, wa.withdraw_type,
        wa.withdraw_order_number, wa.add_time, wa.arrive_time,
        wa.`comment`,auc.user_type,wa.withdraw_way,wa.account,au.number,auc.user_true_name,wa.unit
        FROM withdraw_application AS wa
        LEFT JOIN app_user AS au ON (wa.user_id = au.app_user_id)
        LEFT JOIN app_user_certification AS auc ON (wa.user_id = auc.app_user_id)
        <where>
            wa.withdraw_role = auc.user_type and user_certification_status = '已通过'
            <if test="addTime != null and addTime != ''">
                AND wa.add_time >= #{addTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND wa.add_time &lt;= #{endTime}
            </if>
            <if test="withdrawRole != null and withdrawRole != ''">
                AND wa.withdraw_role = #{withdrawRole}
            </if>
        </where>
        ORDER BY wa.withdraw_id DESC
    </select>
    <select id="selectWithdrawApplicationListCount" resultType="java.lang.Integer" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SELECT COUNT(wa.withdraw_id) AS count
        FROM withdraw_application AS wa
        LEFT JOIN app_user AS au ON (wa.user_id = au.app_user_id)
        LEFT JOIN app_user_certification AS auc ON (wa.user_id = auc.app_user_id)
        <where>
            wa.withdraw_role = auc.user_type and user_certification_status = '已通过'
            <if test="addTime != null and addTime != ''">
                AND wa.add_time >= #{addTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND wa.add_time &lt;= #{endTime}
            </if>
            <if test="withdrawRole != null and withdrawRole != ''">
                AND wa.withdraw_role = #{withdrawRole}
            </if>
        </where>
        ORDER BY wa.withdraw_id DESC
    </select>
    <select id="selectByWithdrawId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SELECT wa.withdraw_id,wa.withdraw_money, wa.user_id, wa.withdraw_role, wa.withdraw_type,
        wa.withdraw_order_number, wa.add_time, wa.arrive_time,
        wa.`comment`,auc.user_true_name,auc.user_type,wa.withdraw_way,wa.unit
        FROM withdraw_application AS wa
        LEFT JOIN app_user_certification AS auc ON (wa.user_id = auc.app_user_id)
        WHERE wa.withdraw_role = auc.user_type AND wa.withdraw_id = #{withdrawId} AND user_certification_status = '已通过'
    </select>

    <!-- <update id="updateWithdrawApplication">
       &lt;!&ndash;
         WARNING - @mbggenerated
         This element is automatically generated by MyBatis Generator, do not modify.
       &ndash;&gt;
       update withdraw_application
       set
       bank_card_id = #{bankCardId,jdbcType=INTEGER}
       where withdraw_id = #{withdrawId,jdbcType=INTEGER}
     </update>-->
    <select id="selectWithdrawApplicationByUserId" resultMap="BaseResultMap">
    SELECT wa.withdraw_id,wa.withdraw_money,wa.withdraw_role,wa.withdraw_type,wa.withdraw_order_number,wa.add_time,wa.arrive_time,wa.withdraw_way,bc.bank_name,bc.card_number,wa.unit
    FROM withdraw_application AS wa
    LEFT JOIN bank_card AS bc ON (wa.bank_card_id = bc.bank_card_id)
    WHERE wa.withdraw_role = #{withdrawRole}
      AND wa.user_id = #{userId}
      ORDER BY wa.withdraw_id DESC
  </select>

    <select id="selectCountWithdrawApplicationByUserId" resultType="java.lang.Integer">
    SELECT COUNT(wa.withdraw_id) AS count
    FROM withdraw_application AS wa
    LEFT JOIN bank_card AS bc ON (wa.bank_card_id = bc.bank_card_id)
    WHERE wa.withdraw_role = #{withdrawRole}
      AND wa.user_id = #{userId}
  </select>

    <select id="selectWithdrawApplicationByOrderNumber" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        wa.withdraw_id,wa.withdraw_money,wa.withdraw_order_number,wa.add_time,wa.withdraw_way,au.user_name,wa.user_id,wa.bank_card_id,wa.withdraw_type,wa.unit
        from withdraw_application AS wa
        LEFT JOIN app_user AS au ON (wa.user_id = au.app_user_id)
        WHERE withdraw_order_number = #{withdrawOrderNumber}
    </select>
    <select id="selectWithdrawApplicationByBankCardId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select withdraw_id,withdraw_money, user_id, withdraw_role, withdraw_type,
        withdraw_order_number, add_time, arrive_time, `comment`,bank_card_id
        from withdraw_application
        where bank_card_id = #{bankCardId,jdbcType=INTEGER}
    </select>

</mapper>