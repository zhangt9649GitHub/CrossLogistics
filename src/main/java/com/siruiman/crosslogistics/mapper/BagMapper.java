package com.siruiman.crosslogistics.mapper;

import com.siruiman.crosslogistics.model.Bag;
import com.siruiman.crosslogistics.model.Goods;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.HashMap;
import java.util.List;

@Mapper
@Repository
public interface BagMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bag
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer bagId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bag
     *
     * @mbggenerated
     */
    int insert(Bag record);

    Bag selectByPrimaryKey(Integer bagId);

    List<Bag> selectAll(Bag bag);

    int updateByPrimaryKey(Bag record);

    /**
     * 查询货袋个数
     *
     * @return
     */
    int selectCountBag(Bag bag);

    /**
     * 查询货袋所在仓库仓位区域
     *
     * @param bagId
     * @return
     */
    Bag selectBagDetailedOfWarehouseById(int bagId);

    /**
     * 查询货袋状态
     *
     * @param bagId
     * @return
     */
    Bag selectBagStateById(int bagId);

    /**
     * 根据货车id查询货袋列表信息
     *
     * @param truckId
     * @return
     */
    List<Bag> selectBagListByTruckId(@Param("truckId") Integer truckId);

    /**
     * 根据货车id查询货袋列表总行数
     *
     * @param truckId
     * @return
     */
    int selectCountBagListByTruckId(@Param("truckId") Integer truckId);

    /**
     * 根据货袋编号查询货袋id
     *
     * @param bagNumber
     * @return
     */
    int selectByBagNumber(String bagNumber);

    /**
     * 修改货袋状态根据货袋(货袋id)
     *
     * @param bag
     */
    void updateBagState(@Param("bag") Bag bag);

    /**
     * 查询货袋id根据货袋编号
     *
     * @param bagNumber
     * @return
     */
    int selectBagIdByBagNumber(String bagNumber);


    /**
     * 根据货袋编号 查询货袋详情
     *
     * @param bagNumber
     * @return
     */
    Bag selectBagDetailedByBagNumber(String bagNumber);

    /**
     * 更新货袋
     *
     * @param bag
     */
    void updateBag(Bag bag);

    /**
     * 根据货袋id查询货袋详情
     *
     * @param bagId
     * @return
     */
    Bag selectBagById(@Param("bagId") int bagId);

    /**
     * 修改货袋在中国的仓库id仓位id
     *
     * @param warehouseId
     * @param wpId
     * @param updateTime
     * @param bagId
     */
    void updateBagInitWarehouse(@Param("warehouseId") int warehouseId, @Param("wpId") int wpId,
                                @Param("updateTime") String updateTime, @Param("bagId") int bagId);

    /**
     * 修改货袋在新加坡的仓库id仓位id
     *
     * @param warehouseId
     * @param wpId
     * @param updateTime
     * @param bagId
     */
    void updateBagLastWarehouse(@Param("warehouseId") int warehouseId, @Param("wpId") int wpId,
                                @Param("updateTime") String updateTime, @Param("bagId") int bagId);

    /**
     * 查出货袋编号及货袋所属区域集结点
     *
     * @param bagNumber
     * @return
     */
    Bag selectBagByNumber(@Param("bagNumber") String bagNumber);


    /**
     * 更新货袋状态装车出库
     *
     * @param bag
     */
    void updateBagInTruck(@Param("bag") Bag bag);

    /**
     * 查询未打印的货袋信息
     *
     * @return
     */

    Bag selectBagPrint();


    /**
     * 修改货袋状态为已打印
     *
     * @param bagId
     */
    void updateBagPrintState(@Param("bagId") int bagId, @Param("printState") int printState);

    /**
     * 根据货袋id查出运载的大货车id
     *
     * @param bagId
     * @return
     */
    int selectTruckIdByBagId(int bagId);

    /**
     * 根据小车id和状态获取货袋id
     *
     * @param carId
     * @param state
     * @return
     */
    Bag selectBagId(@Param("carId") Integer carId, @Param("state") Byte state);

    /**
     * 获取货袋列表
     *
     * @param map
     * @return
     */
    List<Bag> selectBagList(HashMap<String, Object> map);

    /**
     * 获取货袋列表总条数
     *
     * @param map
     * @return
     */
    int selectCountBagList(HashMap<String, Object> map);

    /**
     * 根据货袋id获取货袋详情
     *
     * @param bagId
     * @return
     */
    Bag selectBagDetailsById(@Param("bagId") int bagId);


    /**
     * 查出货袋在新加坡所属仓位id
     *
     * @param bagId
     * @return
     */
    int selectSGWarehouseById(int bagId);

    /**
     * 查出指定集结点的货袋
     *
     * @param rallyPointId
     * @return
     */
    List<Bag> selectByRallyPointId(int rallyPointId);

    /**
     * 根据小车id和货袋状态查询当前小车上的货袋id
     *
     * @param CarId
     * @return
     */
    List<Bag> selectBagByCarId(int CarId);

    /**
     * 根据区域集结点id查询当前区域入新加坡库的货袋
     *
     * @param singaporeAreaId
     * @return
     */
    List<Bag> selectBagBySingaporeAreaId(@Param("singaporeAreaId") int singaporeAreaId);

    /**
     * 修改货物状态直接配送
     *
     * @param bag
     */
    void updateBagDirect(@Param("bag") Bag bag);

    /**
     * 根据小车id查询最新的一条货袋记录为内有异常件
     * @param carId
     * @param state
     * @return
     */
    Bag selectBagByCarIdAndState(@Param("carId") int carId,@Param("state") int state);

    /**
     * 根据货车id和货袋状态查询货袋列表
     * @param truckId
     * @param state
     * @return
     */
    List<Bag> selectBagListByTruckIdANDState(@Param("truckId") int truckId,@Param("state") int state);
}