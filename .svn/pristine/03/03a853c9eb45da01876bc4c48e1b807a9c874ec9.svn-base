<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.siruiman.crosslogistics.mapper.GroupAccessMapper" >
  <select id="groupAll" resultType="com.siruiman.crosslogistics.model.Group">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select group_id, group_name, group_text, add_time
    from admin_access_group
    WHERE 1=1
    <if test="groupId!=0">
      AND group_id = #{groupId}
    </if>
  </select>

  <select id="count" resultType="java.lang.Integer">
    select COUNT(1)
    from admin_access_group
    WHERE 1=1
    <if test="groupId!=0">
      AND group_id = #{groupId}
    </if>
  </select>

  <select id="accessAllByGroup" resultType="com.siruiman.crosslogistics.model.Access">
    SELECT c.access_id, c.access_name, c.access_module_id, c.url, c.`type`
    FROM admin_access_group a
    LEFT JOIN admin_group_access b
    ON a.group_id = b.group_id
    LEFT JOIN admin_access c
    ON b.access_id = c.access_id
    WHERE a.group_id = #{groupId}
  </select>

  <select id="accessAll" resultType="com.siruiman.crosslogistics.model.Access">
    SELECT access_id, access_name, access_module_id, url, `type`
    FROM admin_access
  </select>

  <select id="selectGroup" resultType="com.siruiman.crosslogistics.model.GroupAccess">
    SELECT group_name, group_text
    FROM admin_access_group
    WHERE group_id = #{groupId}
  </select>

  <insert id="addGroup" parameterType="com.siruiman.crosslogistics.model.dto.GroupAccessDto">
    <selectKey resultType="java.lang.Integer" keyProperty="groupAccessDto.groupId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO
      admin_access_group(group_name, group_text, admin_uid, add_time)
    VALUES
      (#{groupAccessDto.groupName}, #{groupAccessDto.groupText}, #{groupAccessDto.adminUid}, now())
  </insert>

  <insert id="addGroupAccess" parameterType="com.siruiman.crosslogistics.model.dto.GroupAccessDto">
      INSERT INTO
        admin_group_access(group_id, access_id, add_time, admin_uid)
      VALUES
        <foreach collection="groupAccessDto.accessIds" item="accessId" separator=",">
          (#{groupAccessDto.groupId}, #{accessId}, now(), #{groupAccessDto.adminUid})
        </foreach>
  </insert>

  <delete id="deleteGroup">
    DELETE FROM admin_access_group
    WHERE group_id = #{groupId}
  </delete>

  <delete id="deleteGroupAccess">
    DELETE FROM admin_group_access
    WHERE group_id = #{groupId}
  </delete>

  <update id="editGroup" parameterType="com.siruiman.crosslogistics.model.dto.GroupAccessDto">
    UPDATE admin_access_group
    SET group_name = #{groupAccessDto.groupName}, group_text = #{groupAccessDto.groupText}
    WHERE group_id = #{groupAccessDto.groupId}
  </update>

  <select id="selectAccessGroupByUser" resultType="java.lang.Integer">
    SELECT COUNT(1)
    FROM admin_user
    WHERE group_id = #{groupId}
    AND status != '-1'
  </select>
</mapper>